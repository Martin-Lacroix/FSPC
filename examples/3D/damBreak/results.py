import os, sys
import numpy as np
sys.path.append('examples')
import toolbox as tb
import gmsh

# |-------------------------------|
# |   Data From the Literature    |
# |-------------------------------|

data = list()
force = list()

# Marti results

data.append(
[[0.00000, 0.000324],
[0.118928, 0.000324],
[0.140704, -0.00008],
[0.149079, -0.00008],
[0.165829, 0.001147],
[0.190955, 0.006706],
[0.207705, 0.014529],
[0.222781, 0.024000],
[0.241206, 0.036559],
[0.264657, 0.049735],
[0.286432, 0.058588],
[0.316583, 0.063735],
[0.343384, 0.061882],
[0.370184, 0.054471],
[0.385260, 0.048706],
[0.412060, 0.034294],
[0.433836, 0.020500],
[0.455611, 0.008353],
[0.484087, -0.00667],
[0.510888, -0.01861],
[0.536013, -0.02376],
[0.554439, -0.02520],
[0.572864, -0.02335],
[0.594640, -0.01841],
[0.623116, -0.00688],
[0.658291, 0.010824],
[0.686767, 0.023382],
[0.705193, 0.027500],
[0.720268, 0.029147],
[0.737018, 0.027706],
[0.753769, 0.024206],
[0.777219, 0.015353],
[0.795645, 0.004441],
[0.809045, -0.00420],
[0.825796, -0.01614],
[0.844221, -0.02705],
[0.867672, -0.03797],
[0.891122, -0.04373],
[0.902848, -0.04476],
[0.924623, -0.04270],
[0.948074, -0.03673],
[0.973199, -0.02602],
[0.998325, -0.01223],
[1.020101, 0.000735],
[1.043551, 0.011441],
[1.067002, 0.021529],
[1.085427, 0.026265],
[1.105528, 0.027912],
[1.128978, 0.025235],
[1.150754, 0.018647],
[1.175879, 0.007118],
[1.199330, -0.00441],
[1.222781, -0.01491],
[1.244556, -0.02129],
[1.266332, -0.02294],
[1.291457, -0.02047],
[1.319933, -0.01161],
[1.341709, -0.00235],
[1.365159, 0.009176],
[1.393635, 0.019676],
[1.422111, 0.023794],
[1.443886, 0.021941],
[1.462312, 0.017412],
[1.479062, 0.011235],
[1.499162, 0.004235],
[1.524288, -0.00461],
[1.547739, -0.00894],
[1.566164, -0.00976],
[1.591290, -0.00873],
[1.618090, -0.00379],
[1.653266, 0.005265],
[1.688442, 0.012882],
[1.718593, 0.015765],
[1.753769, 0.013294],
[1.778894, 0.007529],
[1.814070, -0.00214],
[1.845896, -0.00914],
[1.877722, -0.01161],
[1.902848, -0.00955],
[1.926298, -0.00502],
[1.964824, 0.003824],
[2.000000, 0.011029]])

force.append(
[[0.00000, 0.011380],
[0.115175, 0.011380],
[0.116732, 0.479374],
[0.121401, 1.136558],
[0.121401, 1.753912],
[0.132296, 2.182077],
[0.147860, 2.739687],
[0.158755, 3.267425],
[0.164981, 3.825036],
[0.166537, 4.273115],
[0.177432, 4.502134],
[0.191440, 4.721195],
[0.202335, 4.870555],
[0.208560, 4.661451],
[0.213230, 4.442390],
[0.216342, 4.183499],
[0.230350, 3.914651],
[0.238132, 3.596017],
[0.244358, 3.406828],
[0.261479, 3.247511],
[0.280156, 3.167852],
[0.287938, 2.928876],
[0.305058, 2.789474],
[0.309728, 2.978663],
[0.325292, 2.938834],
[0.326848, 2.799431],
[0.339300, 2.879090],
[0.359533, 2.829303],
[0.367315, 2.679943],
[0.367315, 2.560455],
[0.381323, 2.480797],
[0.384436, 2.311522],
[0.387549, 2.062589],
[0.398444, 2.261735],
[0.407782, 2.321479],
[0.410895, 2.142248],
[0.426459, 1.953058],
[0.449805, 1.634424],
[0.470039, 1.275960],
[0.493385, 0.897582],
[0.529183, 0.638691],
[0.560311, 0.399716],
[0.575875, 0.409673],
[0.594553, 0.339972],
[0.625681, 0.349929],
[0.663035, 0.389758],
[0.695720, 0.419630],
[0.739300, 0.389758],
[0.754864, 0.260313],
[0.767315, 0.071124],
[0.771984, -0.16785],
[0.776654, -0.48648],
[0.795331, -0.65576],
[0.812451, -0.84495],
[0.826459, -0.66571],
[0.840467, -0.84495],
[0.851362, -0.92460],
[0.854475, -1.10384],
[0.866926, -1.22332],
[0.879377, -1.13371],
[0.893385, -1.07396],
[0.913619, -1.20341],
[0.927626, -1.33285],
[0.947860, -1.31294],
[0.961868, -1.20341],
[0.975875, -1.23328],
[1.002335, -0.95448],
[1.025681, -0.73542],
[1.045914, -0.50640],
[1.073930, -0.25746],
[1.112840, -0.09815],
[1.156420, -0.07823],
[1.187549, -0.11806],
[1.224903, -0.17780],
[1.273152, -0.21763],
[1.315175, -0.23755],
[1.358755, -0.16785],
[1.397665, -0.06827],
[1.441245, 0.180654],
[1.473930, 0.399716],
[1.503502, 0.578947],
[1.528405, 0.618777],
[1.556420, 0.519203],
[1.576654, 0.379801],
[1.603113, 0.290185],
[1.638911, 0.250356],
[1.688716, 0.220484],
[1.735409, 0.160740],
[1.788327, 0.100996],
[1.847471, 0.041252],
[1.900389, 0.021337],
[1.950195, -0.02845],
[2.000000, 0.081081]])

# |--------------------------------|
# |   Post Procesing of Results    |
# |--------------------------------|

X = list()
F = list()
position = [0.277, 0, 0.15]
os.chdir('workspace/metafor')

time, directory = tb.read_files()
tag = tb.find_node(directory[0], position)

for i, file in enumerate(directory):

    gmsh.open(file)
    X.append(gmsh.model.mesh.getNode(tag)[0][0])
    F.append(np.sum(gmsh.view.getModelData(1, i)[2]))

tb.plot_ref(time, X-X[0], data)
tb.plot_ref(time, F, force)